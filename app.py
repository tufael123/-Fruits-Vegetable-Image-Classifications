import streamlit as st
import tensorflow as tf
import numpy as np
from tensorflow.keras.models import load_model

# === Load model ===
model = load_model(r'C:\Users\Syed\Desktop\fruit and vegetables img classifications\image_classifications.keras')

# === Category list ===
data_cat = [
    'apple', 'banana', 'beetroot', 'bell pepper', 'cabbage', 'capsicum', 'carrot', 'cauliflower',
    'chilli pepper', 'corn', 'cucumber', 'eggplant', 'garlic', 'ginger', 'grapes', 'jalepeno',
    'kiwi', 'lemon', 'lettuce', 'mango', 'onion', 'orange', 'paprika', 'pear', 'peas',
    'sweetcorn', 'sweetpotato', 'tomato', 'turnip', 'watermelon'
]

# === Image size ===
img_height, img_width = 180, 180

# === Page config ===
st.set_page_config(page_title="ржлрж▓ ржУ рж╕ржмржЬрж┐ рж╢ржирж╛ржХрзНрждржХрж░ржг ЁЯНУЁЯеж", layout="centered")

# === Custom CSS ===
st.markdown("""
    <style>
        .main-title {
            background: linear-gradient(to right, #00c6ff, #0072ff);
            color: white;
            padding: 1rem;
            border-radius: 0.5rem;
            text-align: center;
            font-size: 2rem;
            margin-bottom: 1.5rem;
        }
        .footer {
            margin-top: 2rem;
            text-align: center;
            color: #888;
            font-size: 0.9rem;
        }
    </style>
""", unsafe_allow_html=True)

# === Gradient title ===
st.markdown('<div class="main-title">ЁЯеЧ ржлрж▓ ржУ рж╕ржмржЬрж┐ рж╢ржирж╛ржХрзНрждржХрж░ржг ЁЯеЭ</div>', unsafe_allow_html=True)

# === Bangla Nutrition Info ===
nutrition_bn = {
    "apple": {"name": "ржЖржкрзЗрж▓", "calories": "рзлрзи ржХрзНржпрж╛рж▓рзЛрж░рж┐ ржкрзНрж░рждрж┐ рззрзжрзж ржЧрзНрж░рж╛ржо", "benefits": "ржЖржкрзЗрж▓ рж╣ржЬржорзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗ ржПржмржВ рж╣рзГржжржпрж╝ рж╕рзБрж╕рзНрже рж░рж╛ржЦрзЗред"},
    "banana": {"name": "ржХрж▓рж╛", "calories": "рзорзп ржХрзНржпрж╛рж▓рзЛрж░рж┐ ржкрзНрж░рждрж┐ рззрзжрзж ржЧрзНрж░рж╛ржо", "benefits": "ржХрж▓рж╛ рж╢ржХрзНрждрж┐ ржпрзЛржЧрж╛ржпрж╝ ржПржмржВ рж╣ржЬржорзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред"},
    "beetroot": {"name": "ржмрзАржЯрж░рзБржЯ", "calories": "рзкрзй ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржмрзАржЯрж░рзБржЯ рж░ржХрзНрждржЪрж╛ржк ржХржорж╛ржпрж╝ ржПржмржВ рж░ржХрзНржд рждрзИрж░рж┐ ржХрж░рзЗред"},
    "bell pepper": {"name": "ржмрзЗрж▓ ржкрж┐ржкрж╛рж░", "calories": "рзирзж ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржмрзЗрж▓ ржкрж┐ржкрж╛рж░ ржЕрзНржпрж╛ржирзНржЯрж┐ржЕржХрзНрж╕рж┐ржбрзЗржирзНржЯ рж╕ржорзГржжрзНржзред"},
    "cabbage": {"name": "ржмрж╛ржБржзрж╛ржХржкрж┐", "calories": "рзирзл ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржмрж╛ржБржзрж╛ржХржкрж┐ ржХрзНржпрж╛ржирзНрж╕рж╛рж░ ржкрзНрж░рждрж┐рж░рзЛржзрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред"},
    "capsicum": {"name": "ржХрзНржпрж╛ржкрж╕рж┐ржХрж╛ржо", "calories": "рзирзж ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржХрзНржпрж╛ржкрж╕рж┐ржХрж╛ржо рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржзрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред"},
    "carrot": {"name": "ржЧрж╛ржЬрж░", "calories": "рзкрзз ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржЧрж╛ржЬрж░ ржЪрзЛржЦрзЗрж░ ржжрзГрж╖рзНржЯрж┐рж╢ржХрзНрждрж┐ ржнрж╛рж▓рзЛ рж░рж╛ржЦрзЗред"},
    "cauliflower": {"name": "ржлрзБрж▓ржХржкрж┐", "calories": "рзирзл ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржлрзБрж▓ржХржкрж┐ рж╣ржЬржорзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗ ржПржмржВ ржлрж╛ржЗржмрж╛рж░ рж╕ржорзГржжрзНржзред"},
    "chilli pepper": {"name": "рж▓рж╛рж▓ ржорж░рж┐ржЪ", "calories": "рзкрзж ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "рж▓рж╛рж▓ ржорж░рж┐ржЪ ржмрж┐ржкрж╛ржХржХрзНрж░рж┐рзЯрж╛ ржмрж╛рзЬрж╛рзЯред"},
    "corn": {"name": "ржнрзБржЯрзНржЯрж╛", "calories": "рзпрзм ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржнрзБржЯрзНржЯрж╛ рж╢ржХрзНрждрж┐ ржпрзЛржЧрж╛рзЯ ржПржмржВ ржЖржБрж╢рзЗ ржнрж░ржкрзБрж░ред"},
    "cucumber": {"name": "рж╢рж╕рж╛", "calories": "рззрзм ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "рж╢рж╕рж╛ рж╢рж░рзАрж░ ржарж╛ржирзНржбрж╛ рж░рж╛ржЦрзЗ ржПржмржВ ржЬрж▓рзАрзЯ ржЙржкрж╛ржжрж╛ржирзЗ рж╕ржорзГржжрзНржзред"},
    "eggplant": {"name": "ржмрзЗржЧрзБржи", "calories": "рзирзл ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржмрзЗржЧрзБржи рж╣рж╛рж░рзНржЯрзЗрж░ рж╕рзНржмрж╛рж╕рзНржерзНржп рж░ржХрзНрж╖рж╛ ржХрж░рзЗред"},
    "garlic": {"name": "рж░рж╕рзБржи", "calories": "рззрзкрзп ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "рж░рж╕рзБржи рж░ржХрзНрждржЪрж╛ржк ржХржорж╛рзЯ ржПржмржВ ржЬрзАржмрж╛ржгрзБ ржкрзНрж░рждрж┐рж░рзЛржз ржХрж░рзЗред"},
    "ginger": {"name": "ржЖржжрж╛", "calories": "рзорзж ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржЖржжрж╛ рж╣ржЬржорзЗ рж╕рж╣рж╛ржпрж╝ржХ ржПржмржВ ржкрзНрж░ржжрж╛рж╣ ржХржорж╛рзЯред"},
    "grapes": {"name": "ржЖржЩрзБрж░", "calories": "рзмрзн ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржЖржЩрзБрж░ ржЕрзНржпрж╛ржирзНржЯрж┐ржЕржХрзНрж╕рж┐ржбрзЗржирзНржЯ рж╕ржорзГржжрзНржзред"},
    "jalepeno": {"name": "ржЬрж╛рж▓рж╛ржкрзЗржирзЛ", "calories": "рзирзп ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржЬрж╛рж▓рж╛ржкрзЗржирзЛ ржмрж┐ржкрж╛ржХржХрзНрж░рж┐рзЯрж╛ ржмрж╛рзЬрж╛рзЯ ржПржмржВ рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржзрзЗ рж╕рж╣рж╛ржпрж╝ржХред"},
    "kiwi": {"name": "ржХрж┐ржЙржЗ", "calories": "рзкрзз ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржХрж┐ржЙржЗ ржнрж┐ржЯрж╛ржорж┐ржи C рж╕ржорзГржжрзНржз ржПржмржВ рждрзНржмржХрзЗрж░ ржЬржирзНржп ржЙржкржХрж╛рж░рзАред"},
    "lemon": {"name": "рж▓рзЗржмрзБ", "calories": "рзирзп ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "рж▓рзЗржмрзБ ржнрж┐ржЯрж╛ржорж┐ржи C рж╕ржорзГржжрзНржз ржПржмржВ рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржзрзЗ рж╕рж╣рж╛ржпрж╝ржХред"},
    "lettuce": {"name": "рж▓рзЗржЯрзБрж╕", "calories": "рззрзл ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "рж▓рзЗржЯрзБрж╕ ржУржЬржи ржХржорж╛рждрзЗ рж╕рж╣рж╛ржпрж╝ржХред"},
    "mango": {"name": "ржЖржо", "calories": "рзмрзж ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржЖржо ржнрж┐ржЯрж╛ржорж┐ржи A ржПржмржВ ржЖржБрж╢рзЗ ржнрж░ржкрзБрж░ред"},
    "onion": {"name": "ржкрзЗржБржпрж╝рж╛ржЬ", "calories": "рзкрзж ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржкрзЗржБржпрж╝рж╛ржЬ рж░ржХрзНрждрзЗ ржЪрж┐ржирж┐рж░ ржорж╛рждрзНрж░рж╛ ржирж┐ржпрж╝ржирзНрждрзНрж░ржгрзЗ рж╕рж╣рж╛ржпрж╝ржХред"},
    "orange": {"name": "ржХржорж▓рж╛", "calories": "рзкрзн ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржХржорж▓рж╛ ржнрж┐ржЯрж╛ржорж┐ржи C рж╕ржорзГржжрзНржз ржПржмржВ рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржзрзЗ рж╕рж╣рж╛ржпрж╝ржХред"},
    "paprika": {"name": "ржкрж╛ржкрж░рж┐ржХрж╛", "calories": "рзирзорзи ржХрзНржпрж╛рж▓рзЛрж░рж┐ (ржорж╕рж▓рж╛ рж╣рж┐рж╕рзЗржмрзЗ)", "benefits": "ржкрж╛ржкрж░рж┐ржХрж╛ ржкрзНрж░ржжрж╛рж╣ ржХржорж╛рждрзЗ рж╕рж╣рж╛ржпрж╝ржХред"},
    "pear": {"name": "ржирж╛рж╢ржкрж╛рждрж┐", "calories": "рзлрзн ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржирж╛рж╢ржкрж╛рждрж┐ рж╣ржЬржорзЗ рж╕рж╣рж╛ржпрж╝ржХ ржПржмржВ ржЖржБрж╢рзЗ ржнрж░ржкрзБрж░ред"},
    "peas": {"name": "ржоржЯрж░рж╢рзБржБржЯрж┐", "calories": "рзорзз ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржоржЯрж░рж╢рзБржБржЯрж┐ ржкрзНрж░рзЛржЯрж┐ржи рж╕ржорзГржжрзНржз ржПржмржВ рж╣рж╛ржбрж╝рзЗрж░ ржЬржирзНржп ржЙржкржХрж╛рж░рзАред"},
    "pineapple": {"name": "ржЖржирж╛рж░рж╕", "calories": "рзлрзж ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржЖржирж╛рж░рж╕ рж╣ржЬржорзЗ рж╕рж╣рж╛ржпрж╝ржХ ржПржмржВ рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржзрзЗ рж╕рж╣рж╛ржпрж╝ржХред"},
    "pomegranate": {"name": "ржбрж╛рж▓рж┐ржо", "calories": "рзорзй ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржбрж╛рж▓рж┐ржо рж░ржХрзНрждржЪрж╛ржк ржирж┐ржпрж╝ржирзНрждрзНрж░ржгрзЗ рж╕рж╣рж╛ржпрж╝ржХред"},
    "potato": {"name": "ржЖрж▓рзБ", "calories": "рзнрзн ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржЖрж▓рзБ рж╢ржХрзНрждрж┐ ржпрзЛржЧрж╛ржпрж╝, ржХрж┐ржирзНрждрзБ ржмрзЗрж╢рж┐ ржирж╛ ржЦрж╛ржУржпрж╝рж╛ржЗ ржнрж╛рж▓рзЛред"},
    "raddish": {"name": "ржорзВрж▓рж╛", "calories": "рззрзм ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржорзВрж▓рж╛ рж╣ржЬржорзЗ рж╕рж╣рж╛ржпрж╝ржХ ржПржмржВ рж▓рж┐ржнрж╛рж░рзЗрж░ ржЬржирзНржп ржЙржкржХрж╛рж░рзАред"},
    "soy beans": {"name": "рж╕ржпрж╝рж╛ржмрж┐ржи", "calories": "рзкрзкрзм ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "рж╕ржпрж╝рж╛ржмрж┐ржи ржкрзНрж░рзЛржЯрж┐ржи ржПржмржВ ржХрзНржпрж╛рж▓рж╕рж┐ржпрж╝рж╛ржо рж╕ржорзГржжрзНржзред"},
    "spinach": {"name": "ржкрж╛рж▓ржВ рж╢рж╛ржХ", "calories": "рзирзй ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржкрж╛рж▓ржВ рж╢рж╛ржХ ржЖржпрж╝рж░ржи рж╕ржорзГржжрзНржз ржПржмржВ рж░ржХрзНржд ржмрж╛ржбрж╝рж╛ржпрж╝ред"},
    "sweetcorn": {"name": "ржорж┐рж╖рзНржЯрж┐ ржнрзБржЯрзНржЯрж╛", "calories": "рзорзм ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржорж┐рж╖рзНржЯрж┐ ржнрзБржЯрзНржЯрж╛ рж╢ржХрзНрждрж┐ ржжрзЗржпрж╝ ржПржмржВ ржЖржБрж╢рзЗ ржнрж░ржкрзБрж░ред"},
    "sweetpotato": {"name": "ржорж┐рж╖рзНржЯрж┐ ржЖрж▓рзБ", "calories": "рзорзм ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "ржорж┐рж╖рзНржЯрж┐ ржЖрж▓рзБ ржнрж┐ржЯрж╛ржорж┐ржи A рж╕ржорзГржжрзНржз ржПржмржВ рж╣ржЬржорзЗ рж╕рж╣рж╛ржпрж╝ржХред"},
    "turnip": {"name": "рж╢рж╛рж▓ржЧржо", "calories": "рзирзо ржХрзНржпрж╛рж▓рзЛрж░рж┐", "benefits": "рж╢рж╛рж▓ржЧржо рж╣рж╛ржбрж╝ ржоржЬржмрзБржд рж░рж╛ржЦрждрзЗ рж╕рж╣рж╛ржпрж╝ржХред"}
}

# === Upload section ===

uploaded_file = st.file_uploader("ржПржХржЯрж┐ ржлрж▓ ржмрж╛ рж╕ржмржЬрж┐рж░ ржЫржмрж┐ ржЖржкрж▓рзЛржб ржХрж░рзБржи", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    try:
        # === Load and preprocess image ===
        image = tf.keras.utils.load_img(uploaded_file, target_size=(img_height, img_width))
        img_array = tf.keras.utils.img_to_array(image)
        img_batch = tf.expand_dims(img_array, 0)

        # === Prediction ===
        prediction = model.predict(img_batch)
        confidence = tf.nn.softmax(prediction[0])
        predicted_class = data_cat[np.argmax(confidence)]

        # === Layout with columns ===
        col1, col2 = st.columns(2)

        # === Left: Image + Prediction ===
        with col1:
            st.image(uploaded_file, caption="ЁЯЦ╝я╕П ржЖржкрж▓рзЛржб ржХрж░рж╛ ржЫржмрж┐", width=280)
            st.markdown("## ЁЯза ржкрзВрж░рзНржмрж╛ржнрж╛рж╕ ржлрж▓рж╛ржлрж▓:")
            if predicted_class in nutrition_bn:
                info = nutrition_bn[predicted_class]
                st.success(f"ЁЯФН **рж╕ржирж╛ржХрзНрждржХрзГржд ржирж╛ржо:** `{info['name']}`")
            else:
                st.success(f"ЁЯФН **рж╕ржирж╛ржХрзНрждржХрзГржд ржирж╛ржо:** `{predicted_class.title()}`")
            st.write(f"тЬЕ **Accuracy:** `{np.max(confidence) * 100:.2f}%`")

        # === Right: Nutrition Info ===
        with col2:
            st.markdown("## ЁЯеЧ ржкрзБрж╖рзНржЯрж┐ рждржерзНржп:")
            if predicted_class in nutrition_bn:
                st.write(f"**ржирж╛ржо:** {info['name']}")
                st.write(f"**ржХрзНржпрж╛рж▓рзЛрж░рж┐:** {info['calories']}")
                st.write(f"**ржЙржкржХрж╛рж░рж┐рждрж╛:** {info['benefits']}")
            else:
                st.info("ЁЯФО ржПржЗ ржЙржкрж╛ржжрж╛ржирзЗрж░ ржЬржирзНржп ржмрж╛ржВрж▓рж╛ рждржерзНржп ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред")

    except Exception as e:
        st.error(f"тЭМ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ: {e}")

# === Footer ===
st.markdown('<div class="footer">Created by Sami & Tamim</div>', unsafe_allow_html=True)
